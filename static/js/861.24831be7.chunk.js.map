{"version":3,"file":"static/js/861.24831be7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"goBackButton\":\"MovieDetails_goBackButton__uWJv2\",\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"title\":\"MovieDetails_title__RBndM\",\"userScore\":\"MovieDetails_userScore__cWf6H\",\"overviewHeader\":\"MovieDetails_overviewHeader__b5CLs\",\"genresHeader\":\"MovieDetails_genresHeader__e-Q9G\",\"overview\":\"MovieDetails_overview__EVogb\",\"genres\":\"MovieDetails_genres__80iSK\",\"additionalInfoHeader\":\"MovieDetails_additionalInfoHeader__RgtbB\",\"links\":\"MovieDetails_links__WB7Lu\"};","// src/components/MovieDetails/MovieDetails.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieDetails } from '../../services/api';\nimport styles from './MovieDetails.module.css';\n\n// URL de bază pentru imaginile posterelor\nconst BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate(); // Hook pentru navigare\n\n  useEffect(() => {\n    const loadMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.error('Failed to fetch movie details:', error);\n      }\n    };\n\n    loadMovieDetails();\n  }, [movieId]);\n\n  if (!movie) return <div>Loading...</div>;\n\n  // Calculăm user score ca procent\n  const userScore = Math.round(movie.vote_average * 10);\n\n  // Extragem genurile într-o listă\n  const genres = movie.genres.map((genre) => genre.name).join(', ');\n\n  return (\n    <div className={styles.container}>\n      <button onClick={() => navigate(-1)} className={styles.goBackButton}>\n        Go Back\n      </button>\n      <div className={styles.movieDetails}>\n        <img\n          src={movie.poster_path ? `${BASE_IMAGE_URL}${movie.poster_path}` : '/path/to/default/image.jpg'}\n          alt={movie.title}\n          className={styles.poster}\n        />\n        <div className={styles.movieInfo}>\n          <h1 className={styles.title}>{movie.title}</h1>\n          <p className={styles.userScore}>User Score: {userScore}%</p>\n          <h2 className={styles.overviewHeader}>Overview</h2>\n          <p className={styles.overview}>{movie.overview}</p>\n          <h3 className={styles.genresHeader}>Genres</h3>\n          <p className={styles.genres}>{genres}</p>\n        </div>\n      </div>\n      {/* Adăugăm titlul pentru \"Additional Information\" */}\n      <h2 className={styles.additionalInfoHeader}>Additional Information</h2>\n      <ul className={styles.links}>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetails;\n","\n\nconst API_KEY = '13b1039719f4562adeb2f96b830cbe1e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch trending movies');\n  return response.json();\n};\n\nconst searchMovies = async (query) => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (!response.ok) throw new Error('Failed to search movies');\n  return response.json();\n};\n\nconst getMovieDetails = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie details');\n  return response.json();\n};\n\nconst getMovieCredits = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie credits');\n  return response.json();\n};\n\nconst getMovieReviews = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie reviews');\n  return response.json();\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["movieId","useParams","movie","setMovie","useState","navigate","useNavigate","useEffect","async","data","getMovieDetails","error","console","loadMovieDetails","_jsx","children","userScore","Math","round","vote_average","genres","map","genre","name","join","_jsxs","className","styles","onClick","src","poster_path","concat","alt","title","overview","Link","to","Outlet","API_KEY","BASE_URL","fetchTrendingMovies","response","fetch","ok","Error","json","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}