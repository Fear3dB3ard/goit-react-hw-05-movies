{"version":3,"file":"static/js/620.4ad51ed5.chunk.js","mappings":"4LACA,QAA4B,2B,aCqD5B,QA9CA,WACE,MAAM,QAAEA,IAAYC,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAevC,OAbAC,EAAAA,EAAAA,YAAU,KACiBC,WACvB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,IAAgBR,GACnCG,EAAWI,EAAKE,QAClB,CAAE,MAAOC,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,GAGFE,EAAkB,GACjB,CAACZ,KAGFa,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHd,EAAQgB,OAAS,GAChBD,EAAAA,EAAAA,KAAA,MAAAD,SACGd,EAAQiB,KAAKC,IACZP,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,WAASI,EAAOC,WACnBJ,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAOE,YAFJF,EAAOG,SAOpBN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BAIX,C,sECxCA,MAAMQ,EAAU,mCACVC,EAAW,+BAEXC,EAAsBpB,UAC1B,MAAMqB,QAAiBC,MAAM,GAADC,OACvBJ,EAAQ,gCAAAI,OAA+BL,IAE5C,IAAKG,EAASG,GAAI,MAAM,IAAIC,MAAM,mCAClC,OAAOJ,EAASK,MAAM,EAGlBC,EAAe3B,UACnB,MAAMqB,QAAiBC,MAAM,GAADC,OACvBJ,EAAQ,0BAAAI,OAAyBL,EAAO,WAAAK,OAAUK,IAEvD,IAAKP,EAASG,GAAI,MAAM,IAAIC,MAAM,2BAClC,OAAOJ,EAASK,MAAM,EAGlBG,EAAkB7B,UACtB,MAAMqB,QAAiBC,MAAM,GAADC,OACvBJ,EAAQ,WAAAI,OAAU7B,EAAO,aAAA6B,OAAYL,IAE1C,IAAKG,EAASG,GAAI,MAAM,IAAIC,MAAM,iCAClC,OAAOJ,EAASK,MAAM,EAGlBI,EAAkB9B,UACtB,MAAMqB,QAAiBC,MAAM,GAADC,OACvBJ,EAAQ,WAAAI,OAAU7B,EAAO,qBAAA6B,OAAoBL,IAElD,IAAKG,EAASG,GAAI,MAAM,IAAIC,MAAM,iCAClC,OAAOJ,EAASK,MAAM,EAGlBxB,EAAkBF,UACtB,MAAMqB,QAAiBC,MAAM,GAADC,OACvBJ,EAAQ,WAAAI,OAAU7B,EAAO,qBAAA6B,OAAoBL,IAElD,IAAKG,EAASG,GAAI,MAAM,IAAIC,MAAM,iCAClC,OAAOJ,EAASK,MAAM,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\"};","\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieReviews } from '../../services/api';\nimport styles from './Reviews.module.css';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const loadMovieReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        console.error('Failed to fetch movie reviews:', error);\n      }\n    };\n\n    loadMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div className={styles.container}>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","\n\nconst API_KEY = '13b1039719f4562adeb2f96b830cbe1e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch trending movies');\n  return response.json();\n};\n\nconst searchMovies = async (query) => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (!response.ok) throw new Error('Failed to search movies');\n  return response.json();\n};\n\nconst getMovieDetails = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie details');\n  return response.json();\n};\n\nconst getMovieCredits = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie credits');\n  return response.json();\n};\n\nconst getMovieReviews = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie reviews');\n  return response.json();\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["movieId","useParams","reviews","setReviews","useState","useEffect","async","data","getMovieReviews","results","error","console","loadMovieReviews","_jsxs","className","styles","children","_jsx","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","response","fetch","concat","ok","Error","json","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}