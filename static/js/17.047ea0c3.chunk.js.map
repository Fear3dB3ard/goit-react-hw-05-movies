{"version":3,"file":"static/js/17.047ea0c3.chunk.js","mappings":"0LACA,QAA4B,0BAA5B,EAAmE,2BAAnE,EAA4G,4BAA5G,EAAuJ,6BAAvJ,EAAgM,0BAAhM,EAAsO,0B,aC6DtO,QAtDA,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,IAgBrC,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJH,EAAAA,EAAAA,MAAA,QAAMK,SAbWC,UACnBC,EAAMC,iBACN,IACE,MAAMC,QAAaC,EAAAA,EAAAA,IAAaf,GAChCI,EAAUU,EAAKE,QACjB,CAAE,MAAOC,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAMgCX,UAAWC,EAAkBC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLC,MAAOpB,EACPqB,SArBoBT,IAC1BX,EAASW,EAAMU,OAAOF,MAAM,EAqBtBG,YAAY,mBACZjB,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASb,UAAWC,EAAoBC,SAAC,eAIxDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAC7BL,EAAOqB,KAAKC,IACXhB,EAAAA,EAAAA,KAAA,MAAmBH,UAAWC,EAAiBC,UAC7CC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAKrB,SAAEiB,EAAMK,SADjCL,EAAMI,UAOzB,C,sEChDA,MAAME,EAAU,mCACVC,EAAW,+BAEXC,EAAsBtB,UAC1B,MAAMuB,QAAiBC,MAAM,GAADP,OACvBI,EAAQ,gCAAAJ,OAA+BG,IAE5C,IAAKG,EAASE,GAAI,MAAM,IAAIC,MAAM,mCAClC,OAAOH,EAASI,MAAM,EAGlBvB,EAAeJ,UACnB,MAAMuB,QAAiBC,MAAM,GAADP,OACvBI,EAAQ,0BAAAJ,OAAyBG,EAAO,WAAAH,OAAU5B,IAEvD,IAAKkC,EAASE,GAAI,MAAM,IAAIC,MAAM,2BAClC,OAAOH,EAASI,MAAM,EAGlBC,EAAkB5B,UACtB,MAAMuB,QAAiBC,MAAM,GAADP,OACvBI,EAAQ,WAAAJ,OAAUY,EAAO,aAAAZ,OAAYG,IAE1C,IAAKG,EAASE,GAAI,MAAM,IAAIC,MAAM,iCAClC,OAAOH,EAASI,MAAM,EAGlBG,EAAkB9B,UACtB,MAAMuB,QAAiBC,MAAM,GAADP,OACvBI,EAAQ,WAAAJ,OAAUY,EAAO,qBAAAZ,OAAoBG,IAElD,IAAKG,EAASE,GAAI,MAAM,IAAIC,MAAM,iCAClC,OAAOH,EAASI,MAAM,EAGlBI,EAAkB/B,UACtB,MAAMuB,QAAiBC,MAAM,GAADP,OACvBI,EAAQ,WAAAJ,OAAUY,EAAO,qBAAAZ,OAAoBG,IAElD,IAAKG,EAASE,GAAI,MAAM,IAAIC,MAAM,iCAClC,OAAOH,EAASI,MAAM,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__sNK5N\",\"searchForm\":\"Movies_searchForm__S-9T7\",\"searchInput\":\"Movies_searchInput__+E-Mw\",\"searchButton\":\"Movies_searchButton__VlmGO\",\"movieList\":\"Movies_movieList__3O+kj\",\"movieItem\":\"Movies_movieItem__WBe6u\"};","\n\nimport React, { useState, } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { searchMovies } from '../../services/api';\nimport styles from './Movies.module.css';\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const handleSearchChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSearch = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await searchMovies(query);\n      setMovies(data.results);\n    } catch (error) {\n      console.error('Failed to search movies:', error);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch} className={styles.searchForm}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleSearchChange}\n          placeholder=\"Enter movie name\"\n          className={styles.searchInput}\n        />\n        <button type=\"submit\" className={styles.searchButton}>\n          Search\n        </button>\n      </form>\n      <ul className={styles.movieList}>\n        {movies.map((movie) => (\n          <li key={movie.id} className={styles.movieItem}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMovies.propTypes = {\n  query: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Movies;\n","\n\nconst API_KEY = '13b1039719f4562adeb2f96b830cbe1e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch trending movies');\n  return response.json();\n};\n\nconst searchMovies = async (query) => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (!response.ok) throw new Error('Failed to search movies');\n  return response.json();\n};\n\nconst getMovieDetails = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie details');\n  return response.json();\n};\n\nconst getMovieCredits = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie credits');\n  return response.json();\n};\n\nconst getMovieReviews = async (movieId) => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  if (!response.ok) throw new Error('Failed to fetch movie reviews');\n  return response.json();\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["query","setQuery","useState","movies","setMovies","_jsxs","className","styles","children","_jsx","onSubmit","async","event","preventDefault","data","searchMovies","results","error","console","type","value","onChange","target","placeholder","map","movie","Link","to","concat","id","title","API_KEY","BASE_URL","fetchTrendingMovies","response","fetch","ok","Error","json","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}